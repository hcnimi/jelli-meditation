{"version":3,"sources":["webpack/bootstrap 83caac21910d2c2a07ca","./js/main.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,kBAAkB;AACtG;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oFAAoF,SAAS;AAC7F;;AAEA;AACA;AACA;AACA;AACA,oFAAoF,SAAS;AAC7F;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 83caac21910d2c2a07ca","\nclass Interval {\n    constructor() {\n    this.startTime = 0;\n    this.nextTime = 0;\n    this.timeInterval = 0;\n    }\n    \n    startInterval() {\n        this.startTime = new Date();\n        console.log(this.startTime);\n    }\n\n    stopInterval() {\n        this.nextTime = new Date();\n        console.log(this.nextTime);\n        let animationInterval = this.defineInterval();\n        console.log(animationInterval);\n        document.getElementById(\"jellyfish-animation\").style.animationIterationCount = 37;\n        document.getElementById(\"jellyfish-animation\").style.animationDuration = `${animationInterval}ms`;\n    }\n\n    defineInterval() {\n        this.timeInterval = this.nextTime - this.startTime;\n        return this.timeInterval;\n    }\n\n    increaseSpeed() {\n        let animationInterval = this.defineInterval();\n        let jellySpeed = document.getElementById(\"jellyfish-animation\").style.animationDuration;\n        let newSpeed = jellySpeed + 1500;\n        document.getElementById(\"jellyfish-animation\").style.animationDuration = `${newSpeed}ms`;\n    }\n\n    decreaseSpeed() {\n        let animationInterval = this.defineInterval();\n        let jellySpeed = document.getElementById(\"jellyfish-animation\").style.animationDuration;\n        let newSpeed = jellySpeed - 1500;\n        document.getElementById(\"jellyfish-animation\").style.animationDuration = `${newSpeed}ms`;\n    }\n}\n\nconst interval = new Interval;\n\n\n\nclass Timer {\n    constructor() {\n        const startTime = 0;\n        const running = 0;\n\n        this.hours = 0;\n        this.minutes =  0;\n        this.seconds = 0;\n        this.tick = this.tick.bind(this);\n    }\n\n    printTime() {\n        let second = 0;\n        let minute = 0;\n        let hour = 0;\n\n        second = (this.seconds < 10) ? \"0\"+this.seconds : this.seconds;\n        minute = (this.minutes < 10) ? \"0\"+this.minutes : this.minutes;\n        hour = (this.hours < 10) ? \"0\"+this.hours : this.hours;\n\n        let spanSecond = document.getElementById('second');\n        let spanMinute = document.getElementById('minute');\n        let spanHour = document.getElementById('hour');\n\n        spanSecond.innerHTML = second;\n        spanMinute.innerHTML = minute;\n        spanHour.innerHTML = hour;\n        \n        const timeString = [hour, minute, second].join(\":\");\n\n        // don't forget to clear after testing\n        console.log(timeString);\n    }\n\n    start() {\n        this.running = setInterval(this.tick, 1000);\n    }\n\n    tick() {\n        this.incrementSeconds();\n        this.printTime();\n    }\n\n    incrementSeconds() {\n        this.seconds += 1;\n        if (this.seconds === 60) {\n            this.seconds = 0;\n            this.incrementMinutes();\n        }\n    }\n\n    incrementMinutes() {\n        this.minutes += 1;\n        if (this.minutes === 60) {\n            this.minutes = 0; \n            this.incrementHours();\n        }\n    }\n\n    incrementHours() {\n        this.hours = (this.hours + 1) % 24;\n    }\n\n    stop() {\n        clearInterval(this.running);\n    }\n}\n\nconst timer = new Timer;\n\n\n// var jellyOver = document.getElementById(\"jellyfish-animation\");\n// jellyOver.addEventListener(\"animationend\", timer.start());\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/main.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}